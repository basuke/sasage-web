name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test:
        name: Test & Lint
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18, 20]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: latest

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Sync SvelteKit
              run: pnpm exec svelte-kit sync

            - name: Run TypeScript type check
              run: pnpm check

            - name: Run unit tests
              run: pnpm test:run

            - name: Run linting
              run: pnpm lint

            - name: Build project
              run: pnpm build
              env:
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  CLOUDFLARE_IMAGES_API_TOKEN: ${{ secrets.CLOUDFLARE_IMAGES_API_TOKEN }}

    security:
        name: Security Audit
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: latest

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Run security audit
              run: pnpm audit --audit-level moderate
              continue-on-error: true

            - name: Check for known vulnerabilities
              run: |
                  # Create audit report
                  pnpm audit --json > audit-report.json || true

                  # Check if there are any high or critical vulnerabilities
                  if [ -f audit-report.json ]; then
                    HIGH_VULNS=$(cat audit-report.json | jq '.vulnerabilities | map(select(.severity == "high" or .severity == "critical")) | length' 2>/dev/null || echo "0")
                    if [ "$HIGH_VULNS" -gt 0 ]; then
                      echo "⚠️ Found $HIGH_VULNS high/critical vulnerabilities"
                      cat audit-report.json | jq '.vulnerabilities | map(select(.severity == "high" or .severity == "critical"))'
                      exit 1
                    else
                      echo "✅ No high/critical vulnerabilities found"
                    fi
                  fi
